# docker-compose version
#   tested version: 3.2  (works with docker engine 17.04.0 and newer)
#   experimental: 3.7   (for docker 18.06.0 and newer)
version: "3.2"
services:

  php:
    image: php:${PHP_VERSION}-fpm-alpine
    environment:
        - PHP_VERSION
    build: 
      context: './php/'
      args:
       PHP_VERSION: ${PHP_VERSION}
    networks:
      - backend
    volumes:
      - ${PROJECT_ROOT}/:/var/www/html/
    container_name: ${COMPOSE_PROJECT_NAME}-php-${PHP_VERSION}

  apache:
    image: httpd:${APACHE_VERSION}-alpine
    environment:
        - APACHE_VERSION
    build:
      context: './apache/'
      args:
       APACHE_VERSION: ${APACHE_VERSION}
    depends_on:
      - php
      - mysql
    networks:
      - frontend
      - backend
    ports:
      - "${APACHE_PORT}:80"
    volumes:
      - ${PROJECT_ROOT}/:/var/www/html/
    container_name: ${COMPOSE_PROJECT_NAME}-apache-${APACHE_VERSION}-${APACHE_PORT}

  mysql:
    image: mysql:${MYSQL_VERSION:-latest}
    restart: always
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - data:/var/lib/mysql
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    container_name: ${COMPOSE_PROJECT_NAME}-mysql-${MYSQL_VERSION}-${DB_PORT}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:${PMA_VERSION}
    networks:
      - backend
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin-${PMA_VERSION}-${PMA_PORT}
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - '${PMA_PORT}:80'
    volumes: 
      - /sessions

networks:
  frontend:
  backend:
volumes:
    data:
